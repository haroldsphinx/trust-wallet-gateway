name: Production Deployment
concurrency: deploy-to-production
on:
  pull_request:
    branches: 
      - main

env:
  ENVIRONMENT: production
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  AWS_REGION: eu-west-1

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Go Environment
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Install linter
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.41.1
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Run lint
        run: make lint

      - name: Run tests
        run: make test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

  publish:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker image
        run: make docker-build

      - name: Push Docker image
        run: make docker-push

  deploy:
    needs: publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Setup kubeconfig
        run: |
          aws eks --region eu-west-1 update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}
      
      - name: Deploy to EKS
        run: make deploy
      
      # - name: Notify Slack
      #   if: always() # Always run this step even if the build job fails
      #   uses: 8398a7/action-slack@v3
      #   with:
      #     status: ${{ job.status }} 
      #     fields: repo,commit,author,eventName,ref,workflow
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 
